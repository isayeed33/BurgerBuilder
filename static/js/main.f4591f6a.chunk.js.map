{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","components/Order/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","click","toolbar","Toolbar","drawerToggleClick","DesktopOnly","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchaseable","ordered","Modal","nextProps","nextState","modalClosed","tranform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","sum","disabledInfo","ings","orderSummary","burger","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","Checkoutsummary","width","margin","CheckoutCancelled","CheckoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinueddHandler","replace","CheckoutSummary","path","match","component","Order","orders","get","fetchedOrders","data","err","Auth","isEmail","password","controlName","updatedControls","App","Orders","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,qBCAxUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,iBCAvID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gBCAjJD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,mBCAjID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,iBCAhGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,2BCA7FD,EAAOC,QAAU,CAAC,QAAU,0B,gBCD5BD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,iBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,iBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,gBCAzED,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,YAAc,4B,2LCCvEC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,oECYdC,EARF,SAACF,GACV,OACI,yBAAKG,UAAWC,IAAQC,KAAMC,MAAO,CAACC,OAAQP,EAAMO,SAChD,yBAAKC,IAAKC,IAAYC,IAAI,gB,0CCSvBC,EAZQ,SAACX,GACpB,OACI,wBAAIG,UAAWC,IAAQQ,gBACnB,kBAAC,IAAD,CAASC,GAAIb,EAAMc,KACVC,MAAOf,EAAMe,MACbC,gBAAiBZ,IAAQa,QAC7BjB,EAAMC,YCIRiB,EAVS,SAAClB,GACrB,OACI,wBAAIG,UAAWC,IAAQe,iBACnB,kBAACP,EAAD,CAAgBE,KAAK,IAAIC,OAAK,GAA9B,kBACA,kBAACH,EAAD,CAAgBE,KAAK,WAArB,UACA,kBAACF,EAAD,CAAgBE,KAAK,SAArB,kB,iBCIGM,EAVM,SAACpB,GAClB,OACI,yBAAKG,UAAWC,IAAQiB,aAAcC,QAAStB,EAAMuB,OACjD,8BACA,8BACA,gCCaGC,EAfC,SAACxB,GACb,OACI,4BAAQG,UAAWC,IAAQqB,SACvB,kBAACJ,EAAD,CAAcE,MAAOvB,EAAM0B,oBAE3B,yBAAKvB,UAAWC,IAAQC,MACpB,kBAACA,EAAD,OAEJ,yBAAKF,UAAWC,IAAQuB,aACpB,kBAACR,EAAD,S,kCCNDS,EANE,SAAC5B,GACd,OACQA,EAAM6B,KAAO,yBAAK1B,UAAWC,IAAQ0B,SAAUR,QAAStB,EAAM+B,UAAkB,MCuB7EC,EArBI,SAAChC,GAChB,IAAIiC,EAAkB,CAAC7B,IAAQ8B,WAAY9B,IAAQ+B,OAInD,OAHGnC,EAAMoC,OACLH,EAAkB,CAAC7B,IAAQ8B,WAAY9B,IAAQiC,OAG/C,kBAAC,EAAD,KACI,kBAACP,EAAD,CAAUD,KAAM7B,EAAMoC,KAAML,QAAS/B,EAAMsC,SAC3C,yBAAKnC,UAAW8B,EAAgBM,KAAK,MAEjC,yBAAKpC,UAAWC,IAAQC,MACpB,kBAACA,EAAD,OAEJ,6BACI,kBAACc,EAAD,UCfCqB,E,4MAEjBC,MAAQ,CACJC,gBAAgB,G,EAGpBC,wBAA0B,WACtB,EAAKC,SAAS,CAACF,gBAAgB,K,EAGnCG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAO,CAACJ,gBAAiB,EAAKD,MAAMC,oB,uDAIxC,OACI,kBAAC,EAAD,KACI,kBAACjB,EAAD,CAASC,kBAAmBqB,KAAKF,0BACjC,kBAACX,EAAD,CAAYE,KAAMW,KAAKN,MAAMC,eAAgBJ,OAAQS,KAAKJ,0BAC1D,yCACA,0BAAMxC,UAAWC,IAAQ4C,SACpBD,KAAK/C,MAAMC,e,GAtBIgD,a,iDCFfC,E,uKAEb,IAAIC,EAAa,KACjB,OAAOJ,KAAK/C,MAAMoD,MACd,IAAM,eACFD,EAAa,yBAAKhD,UAAWC,IAAQiD,cACrC,MACJ,IAAM,YACFF,EAAa,yBAAKhD,UAAWC,IAAQkD,UACjC,yBAAKnD,UAAWC,IAAQmD,SACxB,yBAAKpD,UAAWC,IAAQoD,UAE5B,MACJ,IAAM,OACFL,EAAa,yBAAKhD,UAAWC,IAAQqD,OACrC,MACJ,IAAM,SACFN,EAAa,yBAAKhD,UAAWC,IAAQsD,SACrC,MACJ,IAAM,QACFP,EAAa,yBAAKhD,UAAWC,IAAQuD,QACrC,MACJ,IAAM,QACFR,EAAa,yBAAKhD,UAAWC,IAAQwD,QACrC,MACJ,QACIT,EAAa,KAErB,OAAOA,M,GA5B+BF,a,QC2B/BY,eA1BA,SAAC7D,GACZ8D,QAAQC,IAAI/D,GACZ,IAAIgE,EAAyBC,OAAOC,KAAKlE,EAAMmE,aAC9CC,KAAI,SAAAC,GAAU,OAAO,YAAIC,MAAMtE,EAAMmE,YAAYE,KAC7CD,KAAI,SAACG,EAAGC,GAAO,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGpB,KAAMiB,UAElEK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAMH,OAHqC,IAAlCZ,EAAuBc,SACtBd,EAAyB,gEAGzB,yBAAK7D,UAAWC,IAAQ2E,QACpB,kBAAC,EAAD,CAAkB3B,KAAK,cACtBY,EACD,kBAAC,EAAD,CAAkBZ,KAAK,qB,kCCVpB4B,EAVM,SAAChF,GAAD,OAEb,yBAAKG,UAAWC,IAAQ6E,cACpB,yBAAK9E,UAAWC,IAAQ8E,OAAQlF,EAAMmF,OACtC,4BAAQhF,UAAWC,IAAQgF,KAAM9D,QAAStB,EAAMqF,QAASC,SAAUtF,EAAMsF,UAAzE,QACA,4BAAQnF,UAAWC,IAAQmF,KAAMjE,QAAStB,EAAMwF,OAAhD,UCJNC,EAAW,CACb,CAACN,MAAO,QAAS/B,KAAM,SACvB,CAAC+B,MAAO,QAAS/B,KAAM,SACvB,CAAC+B,MAAO,SAAU/B,KAAM,UACxB,CAAC+B,MAAO,OAAQ/B,KAAM,SAoBXsC,GAjBO,SAAC1F,GAAD,OACd,yBAAKG,UAAWC,IAAQuF,eACpB,6CAAkB,gCAAS3F,EAAM4F,MAAMC,QAAQ,KAE9CJ,EAASrB,KAAI,SAAA0B,GAAI,OACd,kBAACb,EAAD,CACAR,IAAKqB,EAAKX,MACVA,MAAOW,EAAKX,MACZK,MAAO,kBAAMxF,EAAM+F,gBAAgBD,EAAK1C,OACxCiC,QAAS,kBAAMrF,EAAMgG,kBAAkBF,EAAK1C,OAC5CkC,SAAUtF,EAAMsF,SAASQ,EAAK1C,WAGlC,4BAAQjD,UAAWC,IAAQ6F,YAAaX,UAAWtF,EAAMkG,aAAc5E,QAAStB,EAAMmG,SAAtF,e,oBCnBSC,G,oLAEKC,EAAWC,GAC7B,OAAOD,EAAUxE,OAASkB,KAAK/C,MAAM6B,MAAQwE,EAAUpG,WAAW8C,KAAK/C,MAAMC,W,2CAG7E6D,QAAQC,IAAI,mC,+BAIZ,OACI,kBAAC,EAAD,KACI,kBAACjC,EAAD,CAAUD,KAAMkB,KAAK/C,MAAM6B,KAAME,QAASgB,KAAK/C,MAAMuG,cACrD,yBAAKpG,UAAWC,KAAQgG,MAAO9F,MAAO,CAACkG,SAAUzD,KAAK/C,MAAM6B,KAAO,gBAAkB,qBAAsB4E,QAAS1D,KAAK/C,MAAM6B,KAAO,IAAM,MAC3IkB,KAAK/C,MAAMC,e,GAdOgD,a,oBCIpByD,GANA,SAAC1G,GACZ,OACQ,4BAAQG,UAAW,CAACC,KAAQuG,OAAQvG,KAAQJ,EAAM4G,UAAUrE,KAAK,KAAMjB,QAAStB,EAAM+B,QAASuD,SAAUtF,EAAMsF,UAAWtF,EAAMC,WCDvH4G,G,mLAGb/C,QAAQC,IAAI,iC,+BAIN,IAAD,OAGC+C,EAAoB7C,OAAOC,KAAKnB,KAAK/C,MAAMmE,aAAaC,KAAI,SAAAC,GAC9D,OAAQ,wBAAII,IAAKJ,GACT,0BAAM/D,MAAO,CAACyG,cAAe,eAAgB1C,GAD7C,KAC6D,EAAKrE,MAAMmE,YAAYE,OAIhG,OACI,kBAAC,EAAD,KACI,0CACA,iFACA,4BACKyC,GAEL,2BAAG,gDAAsB/D,KAAK/C,MAAM4F,MAAMC,QAAQ,KAClD,mDACA,kBAACc,GAAD,CAAQC,QAAQ,SAAS7E,QAASgB,KAAK/C,MAAMgH,mBAA7C,UACA,kBAACL,GAAD,CAAQC,QAAQ,UAAU7E,QAASgB,KAAK/C,MAAMiH,mBAA9C,e,GA1B0BhE,a,SCE3BiE,G,QAJEC,EAAMC,OAAO,CAC1BC,QAAS,kD,oBCQEC,GARC,WACZ,OACI,yBAAKnH,UAAWC,KAAQmH,QAAxB,eCwCOC,GAxCU,SAAEC,EAAkBN,GACzC,mNACI1E,MAAQ,CACJiF,MAAO,MAFf,EAqBIC,sBAAwB,WACpB,EAAK/E,SAAS,CAAC8E,MAAO,QAtB9B,kEAKyB,IAAD,OAChB3E,KAAK6E,eAAiBT,EAAMU,aAAaC,QAAQC,KAAI,SAAAC,GAEjD,OADA,EAAKpF,SAAS,CAAC8E,MAAO,OACfM,KAEXjF,KAAKkF,eAAiBd,EAAMU,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAK,SAAAT,GAC9D,EAAK9E,SAAS,CAAC8E,MAAOA,SAXlC,6CAiBQP,EAAMU,aAAaC,QAAQM,MAAMrF,KAAK6E,gBACtCT,EAAMU,aAAaK,SAASE,MAAMrF,KAAKkF,kBAlB/C,+BA0BQ,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIpG,KAAMkB,KAAKN,MAAMiF,MACjBnB,YAAaxD,KAAK4E,uBACjB5E,KAAKN,MAAMiF,MAAQ3E,KAAKN,MAAMiF,MAAMW,QAAU,MAEnD,kBAACZ,EAAqB1E,KAAK/C,YAjC3C,GAAqBiD,c,SCMnBqF,G,4MAMF7F,MAAQ,CACJ8F,YAAY,EACZC,SAAS,EACTd,OAAO,G,EAoDXe,gBAAkB,WACd,EAAK7F,SAAS,CAAC2F,YAAY,K,EAG/BG,sBAAwB,WACpB,EAAK9F,SAAS,CAAC2F,YAAY,K,EAgB/BI,wBAA0B,WAClB,EAAK3I,MAAM4I,QAAQC,KAAK,c,kEAtE5B/E,QAAQC,IAAIhB,KAAK/C,S,0CAQDmE,GAEhB,IAAM2E,EAAM7E,OAAOC,KAAKC,GACvBC,KAAI,SAAAC,GAAU,OAAOF,EAAYE,MACjCK,QAAO,SAACoE,EAAKlE,GAAQ,OAAOkE,EAAMlE,IAAM,GAEzC,OADA7B,KAAKH,SAAS,CAACsD,aAAc4C,EAAI,IAC1BA,EAAM,I,+BA4Db,IAAMC,EAAY,eAAOhG,KAAK/C,MAAMgJ,MAChC,IAAI,IAAIvE,KAAOsE,EACXA,EAAatE,GAAOsE,EAAatE,IAAM,EAG3C,IAAIwE,EAAe,KACfC,EAASnG,KAAKN,MAAMiF,MAAQ,yDAAoC,kBAACyB,GAAD,MA0BpE,OAzBGpG,KAAK/C,MAAMgJ,OACVE,EACI,kBAAC,EAAD,KACI,kBAACnE,EAAD,CAAQZ,YAAapB,KAAK/C,MAAMgJ,OAChC,kBAACrD,GAAD,CACII,gBAAiBhD,KAAK/C,MAAMoJ,kBAC5BpD,kBAAmBjD,KAAK/C,MAAMqJ,oBAC9B/D,SAAUyD,EACVnD,MAAO7C,KAAK/C,MAAM4F,MAClBM,aAAcnD,KAAKuG,oBACnBnD,QAASpD,KAAK0F,mBAI1BQ,EAAe,kBAAC,GAAD,CACX9E,YAAapB,KAAK/C,MAAMgJ,KACxBhC,kBAAmBjE,KAAK2F,sBACxBzB,kBAAmBlE,KAAK4F,wBACxB/C,MAAO7C,KAAK/C,MAAM4F,SAGvB7C,KAAKN,MAAM+F,UACVS,EAAe,kBAACE,GAAD,OAIf,kBAAC,EAAD,KACA,kBAAC,GAAD,CAAOtH,KAAMkB,KAAKN,MAAM8F,WAAYhC,YAAaxD,KAAK2F,uBACjDO,GAEJC,O,GA5HWjG,aAgJbsG,iBAdS,SAAA9G,GACpB,MAAM,CACFuG,KAAMvG,EAAM0B,YACZyB,MAAOnD,EAAM+G,eAIM,SAAAC,GACvB,MAAM,CACFL,kBAAmB,SAACM,GAAD,OAAaD,EAAS,CAACrG,KCvJpB,iBDuJsDuG,eAAgBD,KAC5FL,oBAAqB,SAACK,GAAD,OAAaD,EAAS,CAACrG,KCvJnB,oBDuJwDuG,eAAgBD,QAI1FH,CAA6C/B,GAAiBc,GAAenB,K,oBE1I7EyC,GAbS,SAAC5J,GACrB,OACI,yBAAKG,UAAWC,KAAQyJ,iBACpB,sDACA,yBAAKvJ,MAAO,CAACwJ,MAAO,OAAQC,OAAQ,SAChC,kBAAChF,EAAD,CAAQZ,YAAanE,EAAMmE,eAE/B,kBAACwC,GAAD,CAAQC,QAAQ,SAAS7E,QAAS/B,EAAMgK,mBAAxC,UACA,kBAACrD,GAAD,CAAQC,QAAQ,UAAU7E,QAAS/B,EAAMiK,mBAAzC,c,wCC2BGC,GArCD,SAAClK,GAEX,IAAImK,EAAe,KACbC,EAAe,CAAChK,KAAQiK,cAM9B,OAJGrK,EAAMsK,SAAWtK,EAAMuK,gBAAkBvK,EAAMwK,SAC9CJ,EAAavB,KAAKzI,KAAQqK,SAGvBzK,EAAM0K,aACT,IAAK,QACLP,EAAe,yCAAOhK,UAAWiK,EAAa7H,KAAK,MAAUvC,EAAM2K,cAApD,CAAmEC,MAAO5K,EAAM4K,MAAOC,SAAU7K,EAAM8K,WACtH,MACA,IAAK,WACLX,EAAe,4CAAUhK,UAAWiK,EAAa7H,KAAK,MAAUvC,EAAM2K,cAAvD,CAAsEC,MAAO5K,EAAM4K,MAAOC,SAAU7K,EAAM8K,WACzH,MACA,IAAK,SACLX,EAAe,4BAAQhK,UAAWiK,EAAa7H,KAAK,KAAMqI,MAAO5K,EAAM4K,MAAOC,SAAU7K,EAAM8K,SACzF9K,EAAM2K,cAAcI,QAAQ3G,KAAI,SAAA4G,GAAM,OACnC,4BAAQvG,IAAKuG,EAAOJ,MAAOA,MAAOI,EAAOJ,OACpCI,EAAOC,kBAIpB,MACA,QACAd,EAAe,yCAAOhK,UAAWiK,EAAa7H,KAAK,MAAUvC,EAAM2K,cAApD,CAAmEC,MAAO5K,EAAM4K,MAAOC,SAAU7K,EAAM8K,WAG1H,OACI,yBAAK3K,UAAWC,KAAQ8K,OACpB,2BAAO/K,UAAWC,KAAQ8E,OAAQlF,EAAMmF,OACvCgF,IC3BPgB,G,4MAEF1I,MAAQ,CACJ2I,UAAW,CACPC,KAAM,CACFX,YAAa,QACbC,cAAe,CACXvH,KAAM,OACNkI,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbkB,OAAQ,CACJhB,YAAa,QACbC,cAAe,CACXvH,KAAM,OACNkI,YAAa,UAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACXvH,KAAM,OACNkI,YAAa,YAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,EACXC,UAAW,GAEfJ,OAAO,EACPjB,SAAS,GAEbsB,QAAS,CACLpB,YAAa,QACbC,cAAe,CACXvH,KAAM,OACNkI,YAAa,WAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbuB,MAAO,CACHrB,YAAa,QACbC,cAAe,CACXvH,KAAM,QACNkI,YAAa,eAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbwB,eAAgB,CACZtB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CL,MAAO,UACPW,WAAY,GACZE,OAAO,IAGfQ,aAAa,EACbzD,SAAS,G,EAGb0D,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKxJ,SAAS,CACV4F,SAAS,IAEb,IAAM6D,EAAW,GACjB,IAAI,IAAIC,KAAyB,EAAK7J,MAAM2I,UACxCiB,EAASC,GAAyB,EAAK7J,MAAM2I,UAAUkB,GAAuB1B,MAElF,IAAM2B,EAAQ,CACVpI,YAAa,EAAKnE,MAAMgJ,KACxBpD,MAAO,EAAK5F,MAAM4F,MAClB4G,UAAWH,GAEflF,GAAMsF,KAAK,eAAgBF,GAAOG,MAAK,SAAAxE,GAAQ,OAAI,EAAKtF,SAAS,CAAC4F,SAAS,OAASmE,OAAM,SAAAjF,GAAK,OAAI,EAAK9E,SAAS,CAAC4F,SAAS,OAC3H,EAAKxI,MAAM4I,QAAQC,KAAK,KACxB/E,QAAQC,IAAI,EAAK/D,MAAMmE,c,EAwB3ByI,oBAAsB,SAACT,EAAOU,GAC1B,IAAMC,EAAgB,eAAO,EAAKrK,MAAM2I,WAClC2B,EAAkB,eAAOD,EAAiBD,IAChDE,EAAmBnC,MAAQuB,EAAMa,OAAOpC,MACxCmC,EAAmBtB,MAAQ,EAAKwB,cAAcF,EAAmBnC,MAAOmC,EAAmBxB,YAC3FwB,EAAmBvC,SAAU,EAC7BsC,EAAiBD,GAAmBE,EAEpC,IAAId,GAAc,EAClB,IAAI,IAAIY,KAAmBC,EACvBb,EAAca,EAAiBD,GAAiBpB,OAASQ,EAI7D,EAAKrJ,SAAS,CAACwI,UAAW0B,EAAkBb,YAAaA,K,4DAnC/CrB,EAAOsC,GACjB,IAAIC,GAAU,EAEd,OAAID,IAIDA,EAAM1B,WACL2B,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAGlCD,EAAMtB,YACLuB,EAAUvC,EAAM9F,QAAUoI,EAAMtB,WAGjCsB,EAAMrB,YACLsB,EAAUvC,EAAM9F,QAAUoI,EAAMrB,WAE7BsB,K,+BAoBD,IAAD,OACCE,EAAoB,GAC1B,IAAK,IAAI5I,KAAO1B,KAAKN,MAAM2I,UACvBiC,EAAkBxE,KAAK,CACnByE,GAAI7I,EACJ8I,OAAQxK,KAAKN,MAAM2I,UAAU3G,KAGrC,IAAI+I,EACI,0BAAMC,SAAU1K,KAAKmJ,cAChBmB,EAAkBjJ,KAAI,SAAAsJ,GAAW,OACV,kBAACxC,GAAD,CACIzG,IAAKiJ,EAAYJ,GACjB5C,YAAagD,EAAYH,OAAO7C,YAChCC,cAAe+C,EAAYH,OAAO5C,cAClCC,MAAO8C,EAAYH,OAAO3C,MAC1BE,QAAS,SAACqB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOuB,EAAYJ,KAChEhD,SAAUoD,EAAYH,OAAO9B,MAC7BlB,eAAgBmD,EAAYH,OAAOhC,WACnCf,QAAWkD,EAAYH,OAAO/C,aAG1D,kBAAC7D,GAAD,CAAQC,QAAQ,UAAUtB,UAAWvC,KAAKN,MAAMwJ,aAAhD,UAMZ,OAHGlJ,KAAKN,MAAM+F,UACVgF,EAAO,kBAACrE,GAAD,OAGP,yBAAKhJ,UAAWC,KAAQ+K,aACpB,uDACCqC,O,GAhLSvK,aA6LXsG,iBAPS,SAAA9G,GACpB,MAAM,CACFuG,KAAMvG,EAAM0B,YACZyB,MAAOnD,EAAM+G,cAIND,CAAyB4B,IC/LlCwC,G,4MAkBFC,yBAA2B,WACvB,EAAK5N,MAAM4I,QAAQiF,U,EAGvBC,0BAA4B,WACxB,EAAK9N,MAAM4I,QAAQmF,QAAQ,2B,uDAK3B,OACI,6BACI,kBAACC,GAAD,CAAiB7J,YAAapB,KAAK/C,MAAMgJ,KACzCgB,kBAAmBjH,KAAK6K,yBACxB3D,kBAAmBlH,KAAK+K,4BAExB,kBAAC,IAAD,CAAOG,KAAMlL,KAAK/C,MAAMkO,MAAMD,KAAO,gBAC1BE,UAAWhD,U,GAnCflI,aAgDRsG,iBANS,SAAA9G,GACpB,MAAM,CACFuG,KAAMvG,EAAM0B,eAILoF,CAAyBoE,I,oBC1CzBpB,GATD,SAACvM,GACX,OACI,yBAAKG,UAAWC,KAAQgO,OACpB,oDACA,qCAAU,+CC+BP5G,M,4MA/BX/E,MAAQ,CACJ4L,OAAQ,GACR7F,SAAS,G,kEAIO,IAAD,OACfrB,GAAMmH,IAAI,WAAW5B,MAAK,SAAAvE,GACrB,IAAMoG,EAAgB,GACtB,IAAI,IAAI9J,KAAO0D,EAAIqG,KAChBD,EAAc1F,KAAd,eACOV,EAAIqG,KAAK/J,GADhB,CAEI6I,GAAI7I,KAGZ,EAAK7B,SAAS,CAAC4F,SAAS,EAAO+D,MAAOgC,OACvC5B,OAAM,SAAA8B,GACL,EAAK7L,SAAS,CAAC4F,SAAS,S,+BAK5B,OACI,6BACI,kBAAC4F,GAAD,MACA,kBAACA,GAAD,W,GA3BKnL,aAiCmBkE,I,6BCjCnBuH,G,4MACjBjM,MAAQ,CACJgD,SAAU,CACNsG,MAAO,CACHrB,YAAa,QACbC,cAAe,CACXvH,KAAM,QACNkI,YAAa,gBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVmD,SAAS,GAEblD,OAAO,EACPjB,SAAS,GAEboE,SAAU,CACNlE,YAAa,QACbC,cAAe,CACXvH,KAAM,WACNkI,YAAa,YAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,GAEfH,OAAO,EACPjB,SAAS,K,EA0BrBoC,oBAAsB,SAACT,EAAO0C,GAC1B,IAAMC,EAAe,eACd,EAAKrM,MAAMgD,SADG,gBAEhBoJ,EAFgB,eAGV,EAAKpM,MAAMgD,SAASoJ,GAHV,CAIbjE,MAAOuB,EAAMa,OAAOpC,MACpBa,MAAO,EAAKwB,cAAcd,EAAMa,OAAOpC,MAAO,EAAKnI,MAAMgD,SAASoJ,GAAatD,YAC/Ef,SAAS,MAGjB,EAAK5H,SAAS,CAAC6C,SAAUqJ,K,4DA/BflE,EAAOsC,GACjB,IAAIC,GAAU,EAEd,OAAID,IAIDA,EAAM1B,WACL2B,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAGlCD,EAAMtB,YACLuB,EAAUvC,EAAM9F,QAAUoI,EAAMtB,WAGjCsB,EAAMrB,YACLsB,EAAUvC,EAAM9F,QAAUoI,EAAMrB,WAE7BsB,K,+BAqBD,IAAD,OACCE,EAAoB,GAC1B,IAAK,IAAI5I,KAAO1B,KAAKN,MAAMgD,SACvB4H,EAAkBxE,KAAK,CACnByE,GAAI7I,EACJ8I,OAAQxK,KAAKN,MAAMgD,SAAShB,KAIpC,IAAM+I,EAAOH,EAAkBjJ,KAAI,SAAAsJ,GAAW,OAC1C,kBAACxC,GAAD,CAAQzG,IAAOiJ,EAAYJ,GACnB5C,YAAagD,EAAYH,OAAO7C,YAChCC,cAAe+C,EAAYH,OAAO5C,cAClCC,MAAO8C,EAAYH,OAAO3C,MAC1BE,QAAS,SAACqB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOuB,EAAYJ,KAChEhD,SAAUoD,EAAYH,OAAO9B,MAC7BlB,eAAgBmD,EAAYH,OAAOhC,WACnCf,QAAWkD,EAAYH,OAAO/C,aAG1C,OACI,yBAAKrK,UAAWC,KAAQsO,MACpB,8BACKlB,EACD,kBAAC7G,GAAD,CAAQC,QAAQ,WAAhB,gB,GAjGc3D,aCGb8L,G,uKAEjB,OACE,6BACE,kBAAC,EAAD,KACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOd,KAAK,IAAIlN,OAAK,EAACoN,UAAW7F,KACjC,kBAAC,IAAD,CAAO2F,KAAK,YAAYE,UAAWR,KACnC,kBAAC,IAAD,CAAOM,KAAK,UAAUE,UAAWa,KACjC,kBAAC,IAAD,CAAOf,KAAK,QAAQE,UAAWO,Y,GATTzL,aCIbgM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2D,aCfAmB,GAAe,CACblL,YAAa,CACTmL,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVjG,WAAY,GAGdkG,GAAoB,CACtBJ,MAAO,GACPE,OAAQ,GACRC,KAAM,IACNF,MAAO,IA4BII,GAzBC,WAAmC,IAAlClN,EAAiC,uDAAzB4M,GAAcO,EAAW,uCAC9C,OAAOA,EAAOxM,MACV,IVtBsB,iBUuBlB,sBACOX,EADP,CAEI0B,YAAY,eACL1B,EAAM0B,YADF,gBAENyL,EAAOjG,eAAkBlH,EAAM0B,YAAYyL,EAAOjG,gBAAkB,IAEzEH,WAAY/G,EAAM+G,WAAakG,GAAkBE,EAAOjG,kBAEhE,IV9ByB,oBU+BrB,sBACOlH,EADP,CAEI0B,YAAY,eACL1B,EAAM0B,YADF,gBAENyL,EAAOjG,eAAkBlH,EAAM0B,YAAYyL,EAAOjG,gBAAkB,IAEzEH,WAAY/G,EAAM+G,WAAakG,GAAkBE,EAAOjG,kBAEhE,QACI,OAAOlH,IC/BboN,GAAQC,aAAYH,IAEpBI,GACJ,kBAAC,KAAD,CAAUF,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAMNG,IAASC,OAAOF,GAAKG,SAASC,eAAe,SF8GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5D,MAAK,SAAA6D,GACJA,EAAaC,gBAEd7D,OAAM,SAAAjF,GACL5D,QAAQ4D,MAAMA,EAAMW,c","file":"static/js/main.f4591f6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__23J6h\",\"BreadTop\":\"BurgerIngredient_BreadTop__1LTpc\",\"Seeds1\":\"BurgerIngredient_Seeds1__3fz3O\",\"Seeds2\":\"BurgerIngredient_Seeds2__qRr8W\",\"Meat\":\"BurgerIngredient_Meat__3PxKo\",\"Cheese\":\"BurgerIngredient_Cheese__A8xB3\",\"Salad\":\"BurgerIngredient_Salad__1YVCw\",\"Bacon\":\"BurgerIngredient_Bacon__2HbD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1NbKz\",\"Open\":\"SideDrawer_Open__2Kg0A\",\"Close\":\"SideDrawer_Close__1VOKq\",\"Logo\":\"SideDrawer_Logo__31vrM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2rQFM\",\"Label\":\"BuildControl_Label__wi_c0\",\"Less\":\"BuildControl_Less__1e0-A\",\"More\":\"BuildControl_More__3cCpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2haiz\",\"Label\":\"Input_Label__3P3Nc\",\"InputElement\":\"Input_InputElement__1zQzO\",\"Invalid\":\"Input_Invalid__2Z84K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3lPxz\",\"Logo\":\"Toolbar_Logo__jz6eQ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2OFBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1mUBO\",\"active\":\"NavigationItem_active__3m1i8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__snLIJ\",\"OrderButton\":\"BuildControls_OrderButton__29tlH\",\"enable\":\"BuildControls_enable__2twLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__oqtyA\",\"Success\":\"Button_Success__3Po2z\",\"Danger\":\"Button_Danger__2l4hV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1Kp5M\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2DqFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3WS_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1DQY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__9oADW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1kZb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1HBTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__YFn57\",\"load1\":\"Spinner_load1__3X3xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__n_UOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__mUzsQ\",\"Input\":\"ContactData_Input__1o5-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1pa4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1nWw8\",\"Input\":\"Auth_Input__1Zzp0\",\"ContactData\":\"Auth_ContactData__161Gt\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react'\r\nimport burgerLogo from '../../assets/images/logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo} style={{height: props.height}}>\r\n            <img src={burgerLogo} alt=\"My Burger\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo\r\n","import React from 'react'\r\nimport classes from './NavigationItem.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink to={props.link}\r\n                     exact={props.exact}\r\n                     activeClassName={classes.active}>\r\n                {props.children}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default navigationItem\r\n","import React from 'react'\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n            <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default navigationItems\r\n","import React from 'react'\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.click}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle click={props.drawerToggleClick}></DrawerToggle>\r\n            {/* <Logo height=\"80%\"></Logo> */}\r\n            <div className={classes.Logo}>\r\n                <Logo></Logo>\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems></NavigationItems>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default toolbar;\r\n","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n            props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\nexport default backdrop\r\n","import React from 'react'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}></Backdrop>\r\n            <div className={attachedClasses.join(' ')}>\r\n                {/* <Logo height=\"11%\"></Logo> */}\r\n                <div className={classes.Logo}>\r\n                    <Logo></Logo>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems></NavigationItems>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    )\r\n}\r\n\r\nexport default sideDrawer\r\n","import React, { Component } from 'react'\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\n\r\nexport default class layout extends Component {\r\n    \r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n    \r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !this.state.showSideDrawer}\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClick={this.sideDrawerToggleHandler} ></Toolbar>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}></SideDrawer>\r\n                <div>Backdrop</div>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css'\r\n\r\nexport default class BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch(this.props.type){\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>    \r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>    \r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>    \r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>    \r\n                break;  \r\n            default:\r\n                ingredient = null;       \r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n","import React from 'react'\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst burger = (props) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {return [...Array(props.ingredients[igKey])]\r\n        .map((_, i) => {return <BurgerIngredient key={igKey + i} type={igKey}></BurgerIngredient>;} )                                                                 \r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n//Burger check with 0 ingredients\r\n    if(transformedIngredients.length === 0){ \r\n        transformedIngredients = <p>Please start adding ingredients!</p>;     \r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\r\n            \r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default withRouter(burger);\r\n","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n    \r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n            <button className={classes.More} onClick={props.added}>More</button>\r\n        </div>\r\n);\r\n\r\n\r\nexport default buildControl\r\n","import React from 'react';\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            \r\n            {controls.map(ctrl => (\r\n                <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}></BuildControl>\r\n            ))}\r\n\r\n            <button className={classes.OrderButton} disabled={!props.purchaseable} onClick={props.ordered}>Order Now</button>\r\n        </div>\r\n);\r\n\r\nexport default buildControls;\r\n","import React, { Component } from 'react'\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nexport default class Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children!==this.props.children;     //return true if nextProps.show !== this.props.show\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('[Modal.js] componentdidupdate')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}></Backdrop>\r\n                <div className={classes.Modal} style={{tranform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)', opacity: this.props.show ? '1' : '0'}}>\r\n                {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => {\r\n    return (\r\n            <button className={[classes.Button, classes[props.btnType]].join(' ')} onClick={props.clicked} disabled={props.disabled}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default button\r\n","import React, { Component } from 'react'\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nexport default class OrderSummary extends Component {\r\n\r\n    componentDidUpdate(){\r\n        console.log('[OrderSummary.js] DidUpdate');\r\n    }\r\n\r\n\r\n    render() {\r\n//Object.keys(props.ingredients) - //[salad, bacon, cheese, meat]\r\n//Object.keys(props.ingredients).map(currentValue => ({props.ingredients[i]}It will return the value of the each element's currentValue}))\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey =>  {\r\n            return (<li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li>);\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to CheckOut</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>Submit</Button>\r\n            </Aux>\r\n        )\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-25557.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className={classes.Loader}>\r\n            Loading...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default spinner\r\n","import React, { Component } from 'react'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary'\r\n\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            //console.log('Will Unmount', this.reqInterceptor, this.resInterceptor);\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default withErrorHandler;","import React, { Component } from 'react'\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props){ \r\n    //     super(props);\r\n    //     this.state = {}\r\n    // }\r\n\r\n    state = {\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        // axios.get('https://react-my-burger-25557.firebaseio.com/ingredients.json').then(response=> {\r\n        //     this.setState({ingredients: response.data})\r\n        // }).catch(error => {\r\n        //     this.setState({error: true})\r\n        // });\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        //const ingredients = {...this.state.ingredients};\r\n        const sum = Object.keys(ingredients)\r\n        .map(igKey => {return ingredients[igKey];})\r\n        .reduce((sum, el) => {return sum + el;}, 0);\r\n        this.setState({purchaseable: sum>0});\r\n        return sum > 0;\r\n    }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type]\r\n    //     const oldPrice = this.props.price;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if(oldCount<=0){\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type]\r\n    //     const oldPrice = this.props.price;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () =>{\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    // purchaseContinueHandler = () => {\r\n    //     const queryParams = [];\r\n    //     for(let i in this.state.ingredients){\r\n    //         queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n    //     }\r\n    //     queryParams.push('price' + this.props.price);\r\n    //     const queryString = queryParams.join('&');\r\n    //     this.props.history.push({\r\n    //         pathname: '/checkout',\r\n    //         search: '?' + queryString\r\n    //     });\r\n    // } \r\n\r\n    purchaseContinueHandler = () => {\r\n            this.props.history.push('/checkout');\r\n            }\r\n    \r\n    render() {\r\n        const disabledInfo = {...this.props.ings};\r\n            for(let key in disabledInfo){\r\n                disabledInfo[key] = disabledInfo[key]<=0  //disabled[key]<=0 will update true or false\r\n            }\r\n\r\n            let orderSummary = null;\r\n            let burger = this.state.error ? <p>Ingredients cant be loaded</p> : <Spinner></Spinner>;\r\n            if(this.props.ings){\r\n                burger = (\r\n                    <Aux>\r\n                        <Burger ingredients={this.props.ings}></Burger>\r\n                        <BuildControls \r\n                            ingredientAdded={this.props.onIngredientAdded} \r\n                            ingredientRemoved={this.props.onIngredientRemoved}\r\n                            disabled={disabledInfo}\r\n                            price={this.props.price}\r\n                            purchaseable={this.updatePurchaseState}\r\n                            ordered={this.purchaseHandler}>\r\n                        </BuildControls>\r\n                    </Aux>\r\n                );\r\n                orderSummary = <OrderSummary \r\n                    ingredients={this.props.ings} \r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}\r\n                    price={this.props.price}></OrderSummary>\r\n            }\r\n\r\n            if(this.state.loading){\r\n                orderSummary = <Spinner></Spinner>;\r\n            }\r\n\r\n            return (\r\n                <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n                </Aux>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\r\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.Checkoutsummary}>\r\n            <h1>We hope it tastes well</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}></Burger>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.CheckoutCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.CheckoutContinued}>Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary\r\n","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n        inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}></input>;\r\n        break;\r\n        case('textarea'):\r\n        inputElement = <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}></textarea>;\r\n        break;\r\n        case('select'):\r\n        inputElement = <select className={inputClasses.join(' ')} value={props.value} onChange={props.changed}>\r\n            {props.elementConfig.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.displayValue}\r\n                </option>\r\n            ))}\r\n        </select>;\r\n        break;\r\n        default:\r\n        inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}></input>;\r\n        \r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input\r\n","import React, { Component } from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault(); \r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        axios.post('/orders.json', order).then(response => this.setState({loading: false})).catch(error => this.setState({loading: false}));\r\n        this.props.history.push('/');\r\n        console.log(this.props.ingredients);\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        let isValid = true;\r\n\r\n        if(!rules){\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {...this.state.orderForm}\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        \r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n                <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => (\r\n                                            <Input \r\n                                                key={formElement.id}\r\n                                                elementType={formElement.config.elementType}\r\n                                                elementConfig={formElement.config.elementConfig}\r\n                                                value={formElement.config.value}\r\n                                                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                                                invalid={!formElement.config.valid}\r\n                                                shouldValidate={formElement.config.validation}\r\n                                                touched = {formElement.config.touched}\r\n                                            ></Input>\r\n                    ))}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\r\n                </form>\r\n        );\r\n        if(this.state.loading){\r\n            form = <Spinner></Spinner>\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport  {Route} from 'react-router-dom'\r\nimport ContactData from '../ContactData/ContactData'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n    // componentWillMount(){\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     let price = 0;\r\n    //     for(let param of query.entries()){\r\n    //         //['salad', '1']\r\n    //         if(param[0]==='price'){\r\n    //             price = param[1];\r\n    //         } else{\r\n    //             ingredients[param[0]] = +param[1];\r\n    //         }\r\n    //         ingredients[param[0]] = +param[1]; \r\n    //     }\r\n    //     this.setState({ingredients: ingredients, totalPrice: price});\r\n    // }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinueddHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary ingredients={this.props.ings}\r\n                CheckoutCancelled={this.checkoutCancelledHandler}\r\n                CheckoutContinued={this.checkoutContinueddHandler}\r\n                ></CheckoutSummary>\r\n                <Route path={this.props.match.path + '/contact-data'}\r\n                           component={ContactData}  >\r\n                </Route>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.ingredients\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: Salad(1)</p>\r\n            <p>Price: <strong>USD 5.45</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order\r\n","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        axios.get('/orders').then(res => {\r\n             const fetchedOrders = [];\r\n             for(let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n             }\r\n            this.setState({loading: false, order: fetchedOrders});\r\n        }).catch(err => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Order></Order>\r\n                <Order></Order>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\n\r\nexport default class Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        let isValid = true;\r\n\r\n        if(!rules){\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        const form = formElementsArray.map(formElement => (\r\n            <Input  key = {formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched = {formElement.config.touched}  \r\n            ></Input>\r\n        ))\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <form>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout'\nimport {Route, Switch} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>  \n         <Switch>\n           <Route path=\"/\" exact component={BurgerBuilder}></Route>\n           <Route path=\"/checkout\" component={Checkout}></Route>\n           <Route path=\"/orders\" component={Orders}></Route>\n           <Route path=\"/auth\" component={Auth}></Route>\n         </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport React from 'react';\r\n\r\nconst initialState = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 0\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName] : state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer'\n\nconst store = createStore(reducer);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}